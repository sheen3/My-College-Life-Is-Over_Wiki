<mxfile host="Electron" modified="2023-10-07T13:57:47.627Z" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/22.0.2 Chrome/114.0.5735.289 Electron/25.8.4 Safari/537.36" etag="D_-PolyskMQKUo8f4dgG" version="22.0.2" type="device" pages="2">
  <diagram id="e93IcI-MJFnCfA2EzT78" name="项目描述">
    <mxGraphModel dx="1147" dy="675" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="fuctLoXxBBdLHn9VDC2X-2" value="&lt;font style=&quot;font-size: 21px;&quot;&gt;基于消息队列的分布式压测平台&lt;br&gt;&lt;br&gt;平台主要的作用是压测 压测不知道干啥的自己抽自己两巴掌清醒清醒&lt;br&gt;&lt;br&gt;该平台主要有三种角色：被测者也是任务的发布者、测试者也就是任务的执行者；最后一种是系统内部维护的操作的管理员。&lt;br&gt;&lt;br&gt;整个平台的生命周期是：&lt;br&gt;任务的发布者发布任务（task）到任务大厅，任务的测试者可以在任务大厅接受任务，接受任务之后在任务到开始时间的时候就循环向被测端发送测试请求。&lt;br&gt;&lt;br&gt;任务发布者的主要逻辑：&lt;br&gt;发布任务、开始-暂停-结束任务、查看测试结果。&lt;br&gt;&lt;br&gt;任务测试者的主要逻辑：&lt;br&gt;接受任务、测试任务、领取报酬、接受的任务列表。&lt;br&gt;&lt;br&gt;内部系统管理员：&lt;br&gt;公告系统、内部邮箱系统、对用户的管理、对任务的管理、（这一部分不应该在这个里面，但是我们这个为了省事就放在这个里面吧）对内部服务器集群的管理(包括=集群节点添加、自动扩容阈值设置、服务器节点的强制下线等)&lt;br&gt;&lt;br&gt;任务主要包括：&lt;br&gt;任务脚本（&lt;b&gt;这里面还有好大一坨东西，到时候再细分&lt;/b&gt;）、任务报酬&lt;br&gt;&lt;br&gt;用户主要包括：&lt;br&gt;账号、密码、电话等基本信息就不说了、用户角色、角色对应权限&lt;br&gt;&lt;/font&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=top;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="91" y="17" width="618" height="948" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram id="jsTF7Q35z3WFqcnOTKCR" name="开发规范">
    <mxGraphModel dx="819" dy="482" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="i_YRKT2P5MIiZlZf3QZu-1" value="&lt;b&gt;代码开发规范&lt;/b&gt;&lt;br&gt;前端：我也不知道、杨春泉自己填&lt;br&gt;&lt;br&gt;后端：java代码开发规范 驼峰啥的我就不多赘述了 直接上工具&lt;br&gt;idea的插件：打开 IDEA ，选择 File - Settings - Plugins 搜索alibaba ，你就可以看到一个叫&lt;br&gt;Alibaba Java Coding Guidelines的东西，下载然后如果你的代码不规范 他会有波浪线提示你。&lt;br&gt;&lt;br&gt;&lt;b&gt;github&lt;br&gt;&lt;/b&gt;前端H5地址：https://github.com/yxl1014/My-College-Life-Is-Over_Front-End-H5&lt;br&gt;前端安卓地址：暂时还没有建 等H5的做完了 酌情考虑&lt;br&gt;后端地址：https://github.com/yxl1014/My-College-Life-Is-Over_Rear-End&lt;br&gt;&lt;br&gt;开发流程：&lt;br&gt;本地开发再dev分支下开发，当在dev分支下开发完且自测完（使用postman，网址：https://www.postman.com/）没有问题，再将代码合并到test分支下，由到时候bugdone单子中的测试人员测，测试完确定没有问题之后，再将代码合并到main分支下。（&lt;i&gt;谁测试的代码合并到main分支下之后发现还有bug的有惩罚&lt;/i&gt;）。&lt;br&gt;&lt;br&gt;git命令：我找都懒得给你们找&amp;nbsp;https://zhuanlan.zhihu.com/p/22494724 我随便找的&lt;br&gt;&lt;br&gt;git提交规范：&lt;br&gt;git的commit不是让你写first commit的；每次提交git需要在git当中写上单子的编号、模块、日期、完成了什么东西。（&lt;i&gt;谁提交的不规范有惩罚&lt;/i&gt;）&lt;br&gt;例子：&lt;br&gt;&lt;font style=&quot;&quot; color=&quot;#ff0000&quot;&gt;#1 [项目整体设计][准备工作][2023.10.7] 项目的描述以及开发规范&lt;/font&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;开发过程中随手记文档&lt;br&gt;&lt;/b&gt;公司中有wiki给你记，但是咱就懒得弄了，到时候我git上专门整个地方放这些文档。&lt;br&gt;&lt;br&gt;总结什么情况下需要记wiki：&lt;br&gt;1、你在开发过程中遇到了bug，并且解决了。那么就把这个bug：什么时候出现的、怎么出现的、造成的影响、怎么解决的写成文档。&lt;br&gt;2、你在开发过程中对需求的拆分、接口文档、表的设计这些都要记。&lt;br&gt;&lt;br&gt;&lt;b&gt;工期&lt;br&gt;&lt;/b&gt;这个工期当然不是死的，因为我们的项目不是很急，但是到公司中可不会像我这样。&lt;br&gt;在给你们分单子的时候我肯定会问你们多就能完成，然后单子里会有起始日期，不要和我谈意外，在你估算工期的时候就把你的意外加上，你在工作中也会遇到意外，但是领导不会管你，这会影响你的绩效（就是你的工资、奖金、晋升）。&lt;i&gt;咱们自己定的工期内没有完成有惩罚。&lt;/i&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;惩罚制度&lt;br&gt;&lt;/b&gt;公司里的惩罚制度就是扣钱呗，我们的惩罚采用积分制度，满10分请全组人喝奶茶。&lt;br&gt;惩罚等级有五级：&lt;br&gt;1级记1分，包括：git提交不规范，未完待续。。。&lt;br&gt;2级记2分，包括：单子超工期未完成，未完待续。。。&lt;br&gt;3级记3分，包括：main分支下有bug，未完待续。。。&lt;br&gt;4级记4分，包括：未完待续。。。&lt;br&gt;5级记5分，包括：未完待续。。。" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=top;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="72" y="94" width="508" height="807" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
